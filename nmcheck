#!/bin/bash

# Function: Show usage
usage() {
    echo "Usage: $0 -f functions_file -d search_directory -e exclude_dirs"
    echo "  -f: File containing the list of functions (one per line)."
    echo "  -d: Directory to search for the function usage."
    echo "  -e: Comma-separated list of directories to exclude."
    exit 1
}

# Parse command-line arguments
while getopts "f:d:e:" opt; do
    case $opt in
        f) FUNCTIONS_FILE="$OPTARG" ;;
        d) SEARCH_DIR="$OPTARG" ;;
        e) EXCLUDE_DIRS="$OPTARG" ;;
        *) usage ;;
    esac
done

# Check if required arguments are provided
if [[ -z "$FUNCTIONS_FILE" || -z "$SEARCH_DIR" ]]; then
    usage
fi

# Convert exclude directories into grep-friendly patterns
IFS=',' read -r -a EXCLUDE_PATTERNS <<< "$EXCLUDE_DIRS"
EXCLUDE_ARGS=""
for pattern in "${EXCLUDE_PATTERNS[@]}"; do
    EXCLUDE_ARGS+="--exclude-dir=$pattern "
done

# Check if the functions file exists
if [[ ! -f "$FUNCTIONS_FILE" ]]; then
    echo "Error: File '$FUNCTIONS_FILE' not found."
    exit 1
fi

# Process each function
echo "Searching for function usage..."
while IFS= read -r function; do
    echo "Searching for function: $function"
    grep -rnw "$SEARCH_DIR" -e "$function" $EXCLUDE_ARGS --include=\*.{c,cpp,h,hpp} | \
        awk -v func_name="$function" '{print "Function: " func_name ", Location: " $0}'
done < "$FUNCTIONS_FILE"

